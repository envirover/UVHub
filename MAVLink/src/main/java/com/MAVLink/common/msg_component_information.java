/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE COMPONENT_INFORMATION PACKING
package com.MAVLink.common;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
 * Information about a component. For camera components instead use CAMERA_INFORMATION, and for autopilots use AUTOPILOT_VERSION. Components including GCSes should consider supporting requests of this message via MAV_CMD_REQUEST_MESSAGE.
 */
public class msg_component_information extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_COMPONENT_INFORMATION = 395;
    public static final int MAVLINK_MSG_LENGTH = 156;
    private static final long serialVersionUID = MAVLINK_MSG_ID_COMPONENT_INFORMATION;

      
    /**
     * Timestamp (time since system boot).
     */
    public long time_boot_ms;
      
    /**
     * The type of metadata being requested.
     */
    public long metadata_type;
      
    /**
     * Unique uid for this metadata which a gcs can use for created cached metadata and understanding whether it's cache it up to date or whether it needs to download new data.
     */
    public long metadata_uid;
      
    /**
     * Unique uid for the translation file associated with the metadata.
     */
    public long translation_uid;
      
    /**
     * Component definition URI. If prefix mavlinkftp:// file is downloaded from vehicle over mavlink ftp protocol. If prefix http[s]:// file is downloaded over internet. Files are json format. They can end in .gz to indicate file is in gzip format.
     */
    public byte metadata_uri[] = new byte[70];
      
    /**
     * The translations for strings within the metadata file. If null the either do not exist or may be included in the metadata file itself. The translations specified here supercede any which may be in the metadata file itself. The uri format is the same as component_metadata_uri . Files are in Json Translation spec format. Empty string indicates no tranlsation file.
     */
    public byte translation_uri[] = new byte[70];
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_COMPONENT_INFORMATION;
        
        packet.payload.putUnsignedInt(time_boot_ms);
        packet.payload.putUnsignedInt(metadata_type);
        packet.payload.putUnsignedInt(metadata_uid);
        packet.payload.putUnsignedInt(translation_uid);
        
        for (int i = 0; i < metadata_uri.length; i++) {
            packet.payload.putByte(metadata_uri[i]);
        }
                    
        
        for (int i = 0; i < translation_uri.length; i++) {
            packet.payload.putByte(translation_uri[i]);
        }
                    
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a component_information message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
        
        this.time_boot_ms = payload.getUnsignedInt();
        this.metadata_type = payload.getUnsignedInt();
        this.metadata_uid = payload.getUnsignedInt();
        this.translation_uid = payload.getUnsignedInt();
         
        for (int i = 0; i < this.metadata_uri.length; i++) {
            this.metadata_uri[i] = payload.getByte();
        }
                
         
        for (int i = 0; i < this.translation_uri.length; i++) {
            this.translation_uri[i] = payload.getByte();
        }
                
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_component_information() {
        this.msgid = MAVLINK_MSG_ID_COMPONENT_INFORMATION;
    }
    
    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_component_information( long time_boot_ms, long metadata_type, long metadata_uid, long translation_uid, byte[] metadata_uri, byte[] translation_uri) {
        this.msgid = MAVLINK_MSG_ID_COMPONENT_INFORMATION;

        this.time_boot_ms = time_boot_ms;
        this.metadata_type = metadata_type;
        this.metadata_uid = metadata_uid;
        this.translation_uid = translation_uid;
        this.metadata_uri = metadata_uri;
        this.translation_uri = translation_uri;
        
    }
    
    /**
     * Constructor for a new message, initializes everything
     */
    public msg_component_information( long time_boot_ms, long metadata_type, long metadata_uid, long translation_uid, byte[] metadata_uri, byte[] translation_uri, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_COMPONENT_INFORMATION;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.time_boot_ms = time_boot_ms;
        this.metadata_type = metadata_type;
        this.metadata_uid = metadata_uid;
        this.translation_uid = translation_uid;
        this.metadata_uri = metadata_uri;
        this.translation_uri = translation_uri;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_component_information(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_COMPONENT_INFORMATION;
        
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

             
    /**
    * Sets the buffer of this message with a string, adds the necessary padding
    */
    public void setMetadata_Uri(String str) {
        int len = Math.min(str.length(), 70);
        for (int i=0; i<len; i++) {
            metadata_uri[i] = (byte) str.charAt(i);
        }

        for (int i=len; i<70; i++) {            // padding for the rest of the buffer
            metadata_uri[i] = 0;
        }
    }

    /**
    * Gets the message, formated as a string
    */
    public String getMetadata_Uri() {
        StringBuffer buf = new StringBuffer();
        for (int i = 0; i < 70; i++) {
            if (metadata_uri[i] != 0)
                buf.append((char) metadata_uri[i]);
            else
                break;
        }
        return buf.toString();

    }
                          
    /**
    * Sets the buffer of this message with a string, adds the necessary padding
    */
    public void setTranslation_Uri(String str) {
        int len = Math.min(str.length(), 70);
        for (int i=0; i<len; i++) {
            translation_uri[i] = (byte) str.charAt(i);
        }

        for (int i=len; i<70; i++) {            // padding for the rest of the buffer
            translation_uri[i] = 0;
        }
    }

    /**
    * Gets the message, formated as a string
    */
    public String getTranslation_Uri() {
        StringBuffer buf = new StringBuffer();
        for (int i = 0; i < 70; i++) {
            if (translation_uri[i] != 0)
                buf.append((char) translation_uri[i]);
            else
                break;
        }
        return buf.toString();

    }
                         
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_COMPONENT_INFORMATION - sysid:"+sysid+" compid:"+compid+" time_boot_ms:"+time_boot_ms+" metadata_type:"+metadata_type+" metadata_uid:"+metadata_uid+" translation_uid:"+translation_uid+" metadata_uri:"+metadata_uri+" translation_uri:"+translation_uri+"";
    }
    
    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_COMPONENT_INFORMATION";
    }
}
        